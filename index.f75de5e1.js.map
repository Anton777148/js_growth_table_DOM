{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,UAAU;IAChB,MAAM,UAAU;IAChB,MAAM,aAAa;IACnB,MAAM,aAAa;IAEnB,MAAM,kBAAkB,SAAS,aAAa,CAAC;IAC/C,MAAM,kBAAkB,SAAS,aAAa,CAAC;IAC/C,MAAM,qBAAqB,SAAS,aAAa,CAAC;IAClD,MAAM,qBAAqB,SAAS,aAAa,CAAC;IAClD,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,qBAAqB;QACzB,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM;QAClC,IAAI,cAAc;QAElB,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,GACxD,cAAc,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;aAExC,cAAc;QAGhB,gBAAgB,QAAQ,GAAG,YAAY;QACvC,gBAAgB,QAAQ,GAAG,YAAY;QACvC,mBAAmB,QAAQ,GAAG,eAAe;QAC7C,mBAAmB,QAAQ,GAAG,eAAe;IAC/C;IAEA,MAAM,SAAS;QACb,MAAM,cAAc,MAAM,IAAI,CAAC,EAAE,EAAE,MAAM,UAAU;QAEnD,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,WAAW,cAAc,GAAG;YAClD,MAAM,SAAS,MAAM,SAAS;YAE9B,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAC/B,OAAO,UAAU;QAErB;QAEA;IACF;IAEA,MAAM,YAAY;QAChB,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,SACtB,MAAM,SAAS,CAAC;QAGlB;IACF;IAEA,MAAM,YAAY;QAChB,MAAM,OAAO,SAAS,gBAAgB,CAAC;QAEvC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,YACzB,KAAK,OAAO,CAAC,CAAC;YACZ,IAAI,UAAU;QAChB;QAGF;IACF;IAEA,MAAM,eAAe;QACnB,MAAM,OAAO,SAAS,gBAAgB,CAAC;QAEvC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,GACzB,KAAK,OAAO,CAAC,CAAC;YACZ,IAAI,UAAU,CAAC;QACjB;QAGF;IACF;IAEA,gBAAgB,gBAAgB,CAAC,SAAS;IAC1C,gBAAgB,gBAAgB,CAAC,SAAS;IAC1C,mBAAmB,gBAAgB,CAAC,SAAS;IAC7C,mBAAmB,gBAAgB,CAAC,SAAS;IAE7C;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const maxRows = 10;\n  const minRows = 2;\n  const maxColumns = 10;\n  const minColumns = 2;\n\n  const appendRowButton = document.querySelector('.append-row');\n  const removeRowButton = document.querySelector('.remove-row');\n  const appendColumnButton = document.querySelector('.append-column');\n  const removeColumnButton = document.querySelector('.remove-column');\n  const table = document.querySelector('.field');\n\n  const updateButtonStates = () => {\n    const rowCount = table.rows.length;\n    let columnCount = 0;\n\n    if (table.rows.length > 0 && table.rows[0].cells.length > 0) {\n      columnCount = table.rows[0].cells.length;\n    } else {\n      columnCount = 0;\n    }\n\n    appendRowButton.disabled = rowCount >= maxRows;\n    removeRowButton.disabled = rowCount <= minRows;\n    appendColumnButton.disabled = columnCount >= maxColumns;\n    removeColumnButton.disabled = columnCount <= minColumns;\n  };\n\n  const addRow = () => {\n    const columnCount = table.rows[0]?.cells.length || 0;\n\n    if (table.rows.length < maxRows && columnCount > 0) {\n      const newRow = table.insertRow();\n\n      for (let i = 0; i < columnCount; i++) {\n        newRow.insertCell();\n      }\n    }\n\n    updateButtonStates();\n  };\n\n  const removeRow = () => {\n    if (table.rows.length > minRows) {\n      table.deleteRow(-1);\n    }\n\n    updateButtonStates();\n  };\n\n  const addColumn = () => {\n    const rows = document.querySelectorAll('table tr');\n\n    if (rows[0].cells.length < maxColumns) {\n      rows.forEach((row) => {\n        row.insertCell();\n      });\n    }\n\n    updateButtonStates();\n  };\n\n  const remoweColumn = () => {\n    const rows = document.querySelectorAll('table tr');\n\n    if (rows[0].cells.length > 2) {\n      rows.forEach((row) => {\n        row.deleteCell(-1);\n      });\n    }\n\n    updateButtonStates();\n  };\n\n  appendRowButton.addEventListener('click', addRow);\n  removeRowButton.addEventListener('click', removeRow);\n  appendColumnButton.addEventListener('click', addColumn);\n  removeColumnButton.addEventListener('click', remoweColumn);\n\n  updateButtonStates();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}